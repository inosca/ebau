version: "3.4"
services:
  cache:
    image: memcached:1.6-alpine

  proxy:
    image: nginx:1.23-alpine
    depends_on:
      - ember-caluma-portal
      - django
      - keycloak
      - mailhog
      - document-merge-service
      - ember-ebau
    volumes:
      - djangomedia:/var/lib/camac/media:ro
      - djangotmpmedia:/tmp/camac/tmpfiles:ro

  db:
    build:
      context: ../db
      cache_from:
        - acr.run/camac-ng/camac-ng/db:master
    environment:
      - POSTGRES_USER=camac
      - POSTGRES_DATABASE=${APPLICATION}
    volumes:
      - pgdata:/var/lib/postgresql/data

  django: &django
    build:
      context: ../django
      cache_from:
        - acr.run/camac-ng/camac-ng/django:master
    depends_on:
      - db
      - cache
      - keycloak
      - mailhog
    environment:
      - DATABASE_HOST=db
      - DATABASE_NAME=${APPLICATION}
      - DJANGO_CACHE_LOCATION=cache:11211
      - DJANGO_MEDIA_ROOT=/var/lib/camac/media
      - DJANGO_CLAMD_ENABLED=false
      - APPLICATION=${APPLICATION}
      - CACHE_BACKEND=django.core.cache.backends.memcached.MemcachedCache
      - CACHE_LOCATION=cache:11211
      - EVENT_RECEIVER_MODULES=camac.caluma.extensions.events
      - VISIBILITY_CLASSES=camac.caluma.extensions.visibilities.CustomVisibility
      - PERMISSION_CLASSES=camac.caluma.extensions.permissions.CustomPermission
      - VALIDATION_CLASSES=camac.caluma.extensions.validations.CustomValidation
      - DATA_SOURCE_CLASSES=camac.caluma.extensions.data_sources.Municipalities,camac.caluma.extensions.data_sources.Services
      - DYNAMIC_GROUPS_CLASSES=camac.caluma.extensions.dynamic_groups.CustomDynamicGroups
      - DYNAMIC_TASKS_CLASSES=camac.caluma.extensions.dynamic_tasks.CustomDynamicTasks
      - LANGUAGE_CODE=de
      - LANGUAGES=de
      - META_FIELDS=camac-instance-id,submit-date
      - ENABLE_HISTORICAL_API=true
    volumes:
      - djangomedia:/var/lib/camac/media
      - djangotmpmedia:/tmp/camac/tmpfiles

  ember-caluma-portal:
    build:
      context: ../
      dockerfile: ./ember-caluma-portal/Dockerfile
      cache_from:
        - acr.run/camac-ng/camac-ng/ember-caluma-portal:master
      args:
        - APPLICATION=${APPLICATION}

  ember-ebau:
    build:
      context: ../
      dockerfile: ./ember-ebau/Dockerfile
      cache_from:
        - acr.run/camac-ng/camac-ng/ember-ebau:master
      args:
        - APPLICATION=${APPLICATION}

  mailhog:
    image: mailhog/mailhog

  keycloak:
    depends_on:
      - db
    build:
      context: ../keycloak
      cache_from:
        - acr.run/camac-ng/camac-ng/keycloak-${APPLICATION}:master

  document-merge-service:
    image: ghcr.io/adfinis/document-merge-service:5.0.5
    depends_on:
      - db
    volumes:
      - ../document-merge-service/uwsgi.ini:/app/uwsgi.ini:ro
      - ../document-merge-service/demo/templatefiles:/var/lib/document-merge-service/media
      - ../document-merge-service/demo/dump.json:/tmp/document-merge-service/dump.json
    environment:
      - DATABASE_ENGINE=django.db.backends.postgresql
      - DATABASE_HOST=db
      - DATABASE_NAME=${APPLICATION}
      - DATABASE_USER=camac
      - DATABASE_PASSWORD=camac
      - REQUIRE_AUTHENTICATION=True
      - GROUP_ACCESS_ONLY=True
      - OIDC_GROUPS_API_JSONPATH=$$.included[?(@.type=='services')].id
      - OIDC_GROUPS_API_HEADERS=AUTHORIZATION,X-CAMAC-GROUP

  alexandria:
    image: ghcr.io/projectcaluma/alexandria:dev
    depends_on:
      - db
      - minio
    volumes:
      - ../alexandria/demo/dump.json:/tmp/alexandria/dump.json

    environment:
      - ENV=development
      - DATABASE_HOST=db
      - DATABASE_NAME=${APPLICATION}
      - DATABASE_USER=camac
      - MINIO_STORAGE_SERVICE=minio
      - MINIO_STORAGE_ACCESS_KEY=minio
      - LANGUAGES=de-ch,en

  minio:
    image: minio/minio:latest@sha256:7f84f4d07cf0d3562911c6b072e1183436fbc3cad8ccef8157ec5c27456ed452
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ACCESS_KEY=minio
      - MINIO_NOTIFY_WEBHOOK_ENABLE_ALEXANDRIA=on
      - MINIO_NOTIFY_WEBHOOK_ENDPOINT_ALEXANDRIA=http://alexandria:8000/api/v1/hook
    command: server data

  mc:
    image: minio/mc:RELEASE.2020-10-03T02-54-56Z
    restart: on-failure
    environment:
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
    entrypoint: >
      /bin/sh -c "
      mc config host add dc-minio http://minio:9000 $${MINIO_ACCESS_KEY} $${MINIO_SECRET_KEY} --api S3v4;
      mc mb dc-minio/alexandria-media;
      mc event add dc-minio/alexandria-media arn:minio:sqs::ALEXANDRIA:webhook --event put;
      mc event list dc-minio/alexandria-media;"
    depends_on:
      - minio

volumes:
  pgdata:
  djangomedia:
  djangotmpmedia:
  minio_data:
