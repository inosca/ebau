services:
  cache:
    image: memcached:1.6-alpine
    user: memcache:memcache
    networks:
      - ebau.local

  proxy:
    image: nginxinc/nginx-unprivileged:1.25-alpine
    user: nginx:nginx
    volumes:
      - ../proxy/kt_so.conf:/etc/nginx/conf.d/default.conf:ro
      - ../proxy/egov.html:/usr/share/nginx/html/index.html:ro
      - djangomedia:/var/lib/camac/media:ro
      - djangotmpmedia:/tmp/camac/tmpfiles:ro
    depends_on:
      - django
      - document-merge-service
      - ember-caluma-portal
      - ember-ebau
      - keycloak
      - mailpit
      - minio
    ports:
      - "80:80"
    networks:
      ebau.local:
        aliases:
          - ember-ebau.local
          - ebau-portal.local
          - ebau-keycloak.local

  db:
    image: postgres:15-bullseye
    user: ${UID}
    environment:
      POSTGRES_USER: camac
      POSTGRES_PASSWORD: camac
      POSTGRES_DATABASE: ${APPLICATION}
    volumes:
      - ../db/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh:ro
      - pg15data:/var/lib/postgresql/data
    networks:
      - ebau.local

  django: &django
    user: ${UID}
    depends_on:
      - cache
      - db
      - document-merge-service
      - mailpit
      - minio
      - tika
    build:
      args:
        REQUIREMENTS: requirements-dev.txt
    ports:
      - "5555:5555"
      - "5678:5678"
    volumes:
      - ../django:/app
      - djangomedia:/var/lib/camac/media
      - djangotmpmedia:/tmp/camac/tmpfiles
      - /app/staticfiles # prevent staticfiles from leaking to the host system
    environment:
      APPLICATION_ENV: development
      APPLICATION: ${APPLICATION}
      DATABASE_HOST: db
      DATABASE_NAME: ${APPLICATION}
      DATABASE_PASSWORD: camac
      DATABASE_USER: camac
      DJANGO_CACHE_LOCATION: cache:11211
      DJANGO_CLAMD_ENABLED: false
      DJANGO_DEFAULT_FILE_STORAGE: storages.backends.s3.S3Storage
      DJANGO_EMAIL_HOST: mailpit
      DJANGO_EMAIL_PORT: 1025
      DJANGO_INTERNAL_BASE_URL: http://ember-ebau.local
      DJANGO_MEDIA_ROOT: /var/lib/camac/media
      DJANGO_TEMPFILE_DOWNLOAD_URL: /tmp
      DJANGO_Q_ENABLE_SYNC: ${DJANGO_Q_ENABLE_SYNC:-false}
      DOCUMENT_MERGE_SERVICE_URL: http://document-merge-service:8000/document-merge-service/api/v1/
      ENABLE_HISTORICAL_API: true
      ENABLE_TOKEN_EXCHANGE: ${ENABLE_TOKEN_EXCHANGE:-false}
      ENV: dev # needed for manabi dev mode
      LANGUAGE_CODE: de
      LANGUAGES: de
      OAUTHLIB_INSECURE_TRANSPORT: 1
      PYTHONDONTWRITEBYTECODE: 1
      # OIDC
      KEYCLOAK_URL: http://ebau-keycloak.local/auth/
      OIDC_USERINFO_ENDPOINT: http://ebau-keycloak.local/auth/realms/ebau/protocol/openid-connect/userinfo
      # GWR
      GWR_FERNET_KEY: GUdwT6yKxqfszrnHC7wyKDmtVZdhjSVQEPnpeJYNLf8=
      GWR_HOUSING_STAT_BASE_URI: https://www-r.housing-stat.ch/regbl/api/ech0216/2
      # Caluma
      EVENT_RECEIVER_MODULES: camac.caluma.extensions.events
      VISIBILITY_CLASSES: camac.caluma.extensions.visibilities.CustomVisibility
      PERMISSION_CLASSES: camac.caluma.extensions.permissions.CustomPermission
      VALIDATION_CLASSES: camac.caluma.extensions.validations.CustomValidation
      DATA_SOURCE_CLASSES: camac.caluma.extensions.data_sources.Municipalities,camac.caluma.extensions.data_sources.PreliminaryClarificationTargets,camac.caluma.extensions.data_sources.Countries,camac.caluma.extensions.data_sources.Buildings
      DYNAMIC_GROUPS_CLASSES: camac.caluma.extensions.dynamic_groups.CustomDynamicGroups
      DYNAMIC_TASKS_CLASSES: camac.caluma.extensions.dynamic_tasks.CustomDynamicTasks
      # Alexandria
      ALEXANDRIA_ENABLE_PDF_CONVERSION: true
      ALEXANDRIA_USE_MANABI: true
      ALEXANDRIA_DMS_URL: http://document-merge-service:8000/document-merge-service/api/v1
      ALEXANDRIA_ENABLE_CONTENT_SEARCH: true
      TIKA_CLIENT_ONLY: true
      TIKA_SERVER_ENDPOINT: "http://tika:9998"
    networks:
      - ebau.local
    tty: true
    stdin_open: true
    command: /bin/sh -c "./wait-for-it.sh db:5432 -- ./manage.py migrate && ./manage.py collectstatic --noinput && ./manage.py runserver 0:80 --pythonpath /app/$APPLICATION"

  django-q:
    <<: *django
    build:
      context: ../django
      cache_from:
        - acr.run/camac-ng/camac-ng/django:master
    command: /bin/sh -c "./wait-for-it.sh db:5432 -- python manage.py qcluster --pythonpath /app/$APPLICATION"
    # to enable live reloading on file changes: comment above line, uncomment command below and run next line's command in the container
    # find -wholename "**/*.py" | entr python manage.py qcluster --pythonpath /app/$APPLICATION
    # command: /bin/sh -c "sleep inf"
    ports: []

  ember-caluma-portal:
    user: nginx:nginx
    environment:
      KEYCLOAK_HOST: http://ebau-keycloak.local
      SO_GIS_URL: https://geo-i.so.ch
      INTERNAL_URL: http://ember-ebau.local
      EGOV_PORTAL_URL: ${EGOV_PORTAL_URL:-http://egov.local}
      EGOV_PRESTATION_PATH: ${EGOV_PRESTATION_PATH:-/prestation/1}
      ENABLE_TOKEN_EXCHANGE: ${ENABLE_TOKEN_EXCHANGE:-false}
      ENABLE_WATERMARK: true
      WATERMARK: local
    networks:
      - ebau.local

  ember-ebau:
    user: nginx:nginx
    environment:
      KEYCLOAK_HOST: http://ebau-keycloak.local
      PORTAL_URL: http://ebau-portal.local
      SO_GIS_URL: https://geo-i.so.ch
      ENABLE_WATERMARK: true
      WATERMARK: local
      ALEXANDRIA_MANABI_ALLOWED_MIMETYPES: application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
    networks:
      - ebau.local

  keycloak:
    user: keycloak:keycloak
    depends_on:
      - db
    volumes:
      - ../keycloak/config/${APPLICATION}-test-config.json:/opt/keycloak/data/import/test-config.json
      - ../keycloak/themes/src/main/resources/theme/kanton-so:/opt/keycloak/themes/kanton-so-dev
    environment:
      KC_DB_PASSWORD: camac
      KC_DB_URL: jdbc:postgresql://db:5432/${APPLICATION}?currentSchema=keycloak
      KC_DB_USERNAME: camac
      KC_HOSTNAME: ebau-keycloak.local
      KC_FEATURES: token-exchange,admin-fine-grained-authz
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: camac
    networks:
      - ebau.local
    command:
      [
        "start",
        "--spi-theme-static-max-age=-1",
        "--spi-theme-cache-themes=false",
        "--spi-theme-cache-templates=false",
      ]

  mailpit:
    image: axllent/mailpit
    user: ${UID}
    networks:
      - ebau.local
    environment:
      MP_WEBROOT: mailpit

  document-merge-service:
    user: ${UID}
    depends_on:
      - cache
      - db
      - minio
    networks:
      - ebau.local
    cap_add:
      - CAP_SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    environment:
      DMS_S3_ACCESS_KEY_ID: minio
      DMS_S3_ENDPOINT_URL: http://minio:9000
      DMS_S3_SECRET_ACCESS_KEY: minio123
      DMS_S3_SIGNATURE_VERSION: s3v4
      DMS_STORAGE_BUCKET_NAME: dms-media
      CACHE_LOCATION: cache:11211
      DATABASE_HOST: db
      DATABASE_NAME: ${APPLICATION}
      DATABASE_PASSWORD: camac
      DATABASE_USER: camac
      ENV: dev
      EXTENSIONS_ARGUMENTS: DJANGO_API=http://django
      FILE_STORAGE: storages.backends.s3.S3Storage
      ISOLATE_UNOCONV: true
      OIDC_USERINFO_ENDPOINT: http://ebau-keycloak.local/auth/realms/ebau/protocol/openid-connect/userinfo
      URL_PREFIX: document-merge-service/
    volumes:
      - ../document-merge-service/extensions:/app/document_merge_service/extensions
      - ../document-merge-service/${APPLICATION}/dump.json:/tmp/document-merge-service/dump.json
    command:
      [
        "/bin/sh",
        "-c",
        "wait-for-it db:5432 -- poetry run python manage.py migrate && poetry run python manage.py runserver 0.0.0.0:8000",
      ]

  minio:
    image: minio/minio:RELEASE.2024-05-01T01-11-10Z
    user: ${UID}
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
      MINIO_BROWSER_REDIRECT_URL: http://ember-ebau.local/minio/ui
    networks:
      - ebau.local
    command: server data --console-address ":9090"

  mc:
    image: minio/mc:RELEASE.2024-04-29T09-56-05Z
    depends_on:
      - minio
    restart: on-failure
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - ../mc/entrypoint.sh:/entrypoint.sh
      - ../document-merge-service/${APPLICATION}/templatefiles:/tmp/dms-media
    entrypoint: /entrypoint.sh
    networks:
      - ebau.local

  # Fix permissions on named volumes
  volume-permission-companion:
    image: alpine
    restart: on-failure
    volumes:
      - pg15data:/data/pg15data
      - djangomedia:/data/djangomedia
      - djangotmpmedia:/data/djangotmpmedia
      - minio_data:/data/minio_data
    command: /bin/sh -c "chown ${UID} -R /data;"

  tika:
    image: apache/tika:2.9.2.1-full
    user: ${UID}
    networks:
      - ebau.local

networks:
  ebau.local:

volumes:
  pg15data:
  djangomedia:
  djangotmpmedia:
  minio_data:
    driver: local
