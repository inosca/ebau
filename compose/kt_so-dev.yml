services:
  cache:
    image: memcached:1.6-alpine
    networks:
      - ebau.local

  proxy:
    image: nginx:1.25-alpine
    volumes:
      - ../proxy/kt_so.conf:/etc/nginx/conf.d/default.conf:ro
      - djangomedia:/var/lib/camac/media:ro
      - djangotmpmedia:/tmp/camac/tmpfiles:ro
    depends_on:
      - django
      - document-merge-service
      - ember-caluma-portal
      - ember-ebau
      - keycloak
      - mailhog
      - minio
    ports:
      - "80:80"
    networks:
      ebau.local:
        aliases:
          - ember-ebau.local
          - ebau-portal.local
          - ebau-keycloak.local

  db:
    image: acr.run/camac-ng/camac-ng/db:master
    build:
      context: ../db
      cache_from:
        - acr.run/camac-ng/camac-ng/db:master
    environment:
      POSTGRES_USER: camac
      POSTGRES_PASSWORD: camac
      POSTGRES_DATABASE: ${APPLICATION}
    volumes:
      - ../db/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh:ro
      - pgdata:/var/lib/postgresql/data
    networks:
      - ebau.local

  django:
    depends_on:
      - cache
      - db
      - document-merge-service
      - mailhog
    build:
      args:
        REQUIREMENTS: requirements-dev.txt
    ports:
      - "5555:5555"
      - "5678:5678"
    volumes:
      - ../django:/app
      - djangomedia:/var/lib/camac/media
      - djangotmpmedia:/tmp/camac/tmpfiles
    environment:
      APPLICATION_ENV: development
      APPLICATION: ${APPLICATION}
      DATABASE_HOST: db
      DATABASE_NAME: ${APPLICATION}
      DATABASE_PASSWORD: camac
      DATABASE_USER: camac
      DJANGO_CACHE_LOCATION: cache:11211
      DJANGO_CLAMD_ENABLED: false
      DJANGO_EMAIL_HOST: mailhog
      DJANGO_EMAIL_PORT: 1025
      DJANGO_INTERNAL_BASE_URL: http://ember-ebau.local
      DJANGO_MEDIA_ROOT: /var/lib/camac/media
      DJANGO_TEMPFILE_DOWNLOAD_URL: /tmp
      DOCUMENT_MERGE_SERVICE_URL: http://document-merge-service:8000/document-merge-service/api/v1/
      ENABLE_HISTORICAL_API: true
      LANGUAGE_CODE: de
      LANGUAGES: de
      OAUTHLIB_INSECURE_TRANSPORT: 1
      PYTHONDONTWRITEBYTECODE: 1
      # OIDC
      KEYCLOAK_URL: http://ebau-keycloak.local/auth/
      OIDC_USERINFO_ENDPOINT: http://ebau-keycloak.local/auth/realms/ebau/protocol/openid-connect/userinfo
      # GWR
      GWR_FERNET_KEY: GUdwT6yKxqfszrnHC7wyKDmtVZdhjSVQEPnpeJYNLf8=
      # Caluma
      EVENT_RECEIVER_MODULES: camac.caluma.extensions.events
      VISIBILITY_CLASSES: camac.caluma.extensions.visibilities.CustomVisibility
      PERMISSION_CLASSES: camac.caluma.extensions.permissions.CustomPermission
      VALIDATION_CLASSES: camac.caluma.extensions.validations.CustomValidation
      DATA_SOURCE_CLASSES: camac.caluma.extensions.data_sources.Municipalities,camac.caluma.extensions.data_sources.Services,camac.caluma.extensions.data_sources.Countries
      DYNAMIC_GROUPS_CLASSES: camac.caluma.extensions.dynamic_groups.CustomDynamicGroups
      DYNAMIC_TASKS_CLASSES: camac.caluma.extensions.dynamic_tasks.CustomDynamicTasks
      # Alexandria
      ALEXANDRIA_MINIO_STORAGE_ENDPOINT: ember-ebau.local
      ALEXANDRIA_MINIO_STORAGE_ACCESS_KEY: minio
      ALEXANDRIA_MINIO_STORAGE_SECRET_KEY: minio123
      ALEXANDRIA_VISIBILITY_CLASSES: camac.alexandria.extensions.visibilities.CustomVisibility
      ALEXANDRIA_PERMISSION_CLASSES: camac.alexandria.extensions.permissions.CustomPermission
      ALEXANDRIA_VALIDATION_CLASSES: camac.alexandria.extensions.validations.Validator
    networks:
      - ebau.local
    command: /bin/sh -c "./wait-for-it.sh db:5432 -- ./manage.py migrate && ./manage.py collectstatic --noinput && ./manage.py runserver 0:80 --pythonpath /app/$APPLICATION"

  ember-caluma-portal:
    networks:
      - ebau.local

  ember-ebau:
    networks:
      - ebau.local

  keycloak:
    depends_on:
      - db
    volumes:
      - ../keycloak/config/${APPLICATION}-test-config.json:/opt/keycloak/data/import/test-config.json
      - ../keycloak/themes/src/main/resources/theme/kanton-so:/opt/keycloak/themes/kanton-so-dev
    environment:
      KC_DB_PASSWORD: camac
      KC_DB_URL: jdbc:postgresql://db:5432/${APPLICATION}?currentSchema=keycloak
      KC_DB_USERNAME: camac
      KC_HOSTNAME: ebau-keycloak.local
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: camac
    networks:
      - ebau.local
    command:
      [
        "start",
        "--spi-theme-static-max-age=-1",
        "--spi-theme-cache-themes=false",
        "--spi-theme-cache-templates=false",
      ]

  mailhog:
    image: mailhog/mailhog
    networks:
      - ebau.local
    environment:
      MH_UI_WEB_PATH: mailhog

  document-merge-service:
    depends_on:
      - cache
      - db
      - minio
    networks:
      - ebau.local
    cap_add:
      - CAP_SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    environment:
      AWS_S3_ACCESS_KEY_ID: minio
      AWS_S3_ENDPOINT_URL: http://minio:9000
      AWS_S3_SECRET_ACCESS_KEY: minio123
      AWS_S3_SIGNATURE_VERSION: s3v4
      AWS_STORAGE_BUCKET_NAME: dms-media
      CACHE_LOCATION: cache:11211
      DATABASE_HOST: db
      DATABASE_NAME: ${APPLICATION}
      DATABASE_PASSWORD: camac
      DATABASE_USER: camac
      ENV: dev
      EXTENSIONS_ARGUMENTS: DJANGO_API=http://ember-ebau.local
      FILE_STORAGE: storages.backends.s3boto3.S3Boto3Storage
      ISOLATE_UNOCONV: true
      OIDC_USERINFO_ENDPOINT: http://ebau-keycloak.local/auth/realms/ebau/protocol/openid-connect/userinfo
      URL_PREFIX: document-merge-service/
    user: "${UID:?Set UID env variable to your user id}"
    volumes:
      - ../document-merge-service/extensions:/app/document_merge_service/extensions
      - ../document-merge-service/${APPLICATION}/dump.json:/tmp/document-merge-service/dump.json
    command:
      [
        "/bin/sh",
        "-c",
        "wait-for-it db:5432 -- poetry run python manage.py migrate && poetry run python manage.py runserver 0.0.0.0:8000",
      ]

  minio:
    image: minio/minio:RELEASE.2023-07-21T21-12-44Z
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
      MINIO_NOTIFY_WEBHOOK_ENDPOINT_ALEXANDRIA: http://django:80/alexandria/api/v1/hook
      MINIO_NOTIFY_WEBHOOK_ENABLE_ALEXANDRIA: on
      MINIO_BROWSER_REDIRECT_URL: http://ember-ebau.local/minio/ui
    networks:
      - ebau.local
    command: server data --console-address ":9090"

  mc:
    image: minio/mc:RELEASE.2023-07-21T20-44-27Z
    depends_on:
      - minio
    restart: on-failure
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - ../mc/entrypoint.sh:/entrypoint.sh
      - ../document-merge-service/${APPLICATION}/templatefiles:/tmp/dms-media
    entrypoint: /entrypoint.sh
    networks:
      - ebau.local

networks:
  ebau.local:

volumes:
  pgdata:
  djangomedia:
  djangotmpmedia:
  minio_data:
    driver: local
