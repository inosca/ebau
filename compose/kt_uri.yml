version: "3.4"
services:
  cache:
    image: memcached:1.6-alpine

  proxy:
    image: nginx:1.21-alpine
    depends_on:
      - ember-caluma-portal
      - django
      - keycloak
      - mailhog
      - ember-camac-ng
    volumes:
      - djangomedia:/var/lib/camac/media:ro
      - djangotmpmedia:/tmp/camac/tmpfiles:ro

  db:
    build:
      context: ../db
      cache_from:
        - acr.run/camac-ng/camac-ng/db:master
    environment:
      - POSTGRES_USER=camac
      - POSTGRES_DATABASE=${APPLICATION}
    volumes:
      - pgdata:/var/lib/postgresql/data

  ember-camac-ng:
    build:
      context: ../
      dockerfile: ./ember-camac-ng/Dockerfile
      cache_from:
        - acr.run/camac-ng/camac-ng/ember-camac-ng:master
      args:
        - APPLICATION=${APPLICATION}

  django:
    build:
      context: ../django
      cache_from:
        - acr.run/camac-ng/camac-ng/django:master
    depends_on:
      - db
      - keycloak
      - cache
      - clamav
      - mailhog
    environment:
      - DATABASE_HOST=db
      - DATABASE_NAME=${APPLICATION}
      - DJANGO_CACHE_LOCATION=cache:11211
      - DJANGO_MEDIA_ROOT=/var/lib/camac/media
      - DJANGO_CLAMD_TCP_ADDR=clamav
      - APPLICATION=${APPLICATION}
      - CACHE_BACKEND=django.core.cache.backends.memcached.MemcachedCache
      - CACHE_LOCATION=cache:11211
      - EVENT_RECEIVER_MODULES=camac.caluma.extensions.events
      - VISIBILITY_CLASSES=camac.caluma.extensions.visibilities.CustomVisibility
      - PERMISSION_CLASSES=camac.caluma.extensions.permissions.CustomPermission
      - VALIDATION_CLASSES=camac.caluma.extensions.validations.CustomValidation
      - DATA_SOURCE_CLASSES=camac.caluma.extensions.data_sources.Locations,camac.caluma.extensions.data_sources.Countries,camac.caluma.extensions.data_sources.Mitberichtsverfahren,camac.caluma.extensions.data_sources.Authorities
      - DYNAMIC_GROUPS_CLASSES=camac.caluma.extensions.dynamic_groups.CustomDynamicGroups
      - DYNAMIC_TASKS_CLASSES=camac.caluma.extensions.dynamic_tasks.CustomDynamicTasks
      - LANGUAGE_CODE=de
      - LANGUAGES=de,fr
      - OIDC_USERNAME_CLAIM=preferred_username
      - OIDC_BOOTSTRAP_BY_EMAIL_FALLBACK=true
      - URI_MIGRATE_PORTAL_USER=true
      - META_FIELDS=camac-instance-id,ebau-number,submit-date
      - ENABLE_HISTORICAL_API=true
      - KEYCLOAK_REALM=urec
      - DJANGO_USE_X_FORWARDED_HOST=True
    volumes:
      - djangomedia:/var/lib/camac/media
      - djangotmpmedia:/tmp/camac/tmpfiles

  ember-caluma-portal:
    build:
      context: ../
      dockerfile: ./ember-caluma-portal/Dockerfile
      cache_from:
        - acr.run/camac-ng/camac-ng/ember-caluma-portal:master
      args:
        - APPLICATION=${APPLICATION}


  mailhog:
    image: mailhog/mailhog

  clamav:
    image: tiredofit/clamav:2.3.0
    environment:
      - CONCURRENT_DATABASE_RELOAD=false
      - DEFINITIONS_UPDATE_FREQUENCY=1440
      - DEFINITIONS_UPDATE_BEGIN=0300

  keycloak:
    depends_on:
      - db
      - mailhog
    image: acr.run/camac-ng/keycloak-uri/keycloak:16.1.0_theme-v0.3.6
    environment:
      - DB_VENDOR=postgres
      - DB_ADDR=db
      - DB_USER=camac
      - DB_DATABASE=${APPLICATION}
      - DB_SCHEMA=keycloak
      - KEYCLOAK_USER=admin
      - PROXY_ADDRESS_FORWARDING=true

  document-merge-service:
    image: adfinissygroup/document-merge-service:v4.6.2
    depends_on:
      - db
    volumes:
      - ../document-merge-service/uwsgi.ini:/app/uwsgi.ini:ro
      - ../document-merge-service/kt_uri/templatefiles:/var/lib/document-merge-service/media
      - ../document-merge-service/kt_uri/dump.json:/tmp/document-merge-service/dump.json
    environment:
      - DATABASE_ENGINE=django.db.backends.postgresql
      - DATABASE_HOST=db
      - DATABASE_NAME=${APPLICATION}
      - DATABASE_USER=camac
      - REQUIRE_AUTHENTICATION=True
      - GROUP_ACCESS_ONLY=True
      - OIDC_BEARER_TOKEN_REVALIDATION_TIME=5
      - OIDC_GROUPS_API_JSONPATH=$$.included[?(@.type=='services')].id
      - OIDC_GROUPS_API_HEADERS=AUTHORIZATION,X-CAMAC-GROUP
      - DOCXTEMPLATE_JINJA_EXTENSIONS=

volumes:
  pgdata:
  djangomedia:
  djangotmpmedia:
  phpsessions:
  templatefiles:
