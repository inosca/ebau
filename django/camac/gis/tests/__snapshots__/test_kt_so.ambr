# serializer version: 1
# name: test_sogis_client[scenario_01]
  dict({
    'gemeinde': dict({
      'displayValue': 'Solothurn',
      'hidden': False,
      'label': 'Suse Junk',
      'value': '1',
    }),
    'gemeindenummer-bfs': dict({
      'hidden': False,
      'label': 'Elise Täsche',
      'value': 2601,
    }),
    'nutzungsplanung-grundnutzung': dict({
      'hidden': False,
      'label': 'Tülay Rörricht',
      'value': '4-geschossige Mischzone, ZR § 6 und 17',
    }),
    'nutzungsplanung-grundnutzung-kanton': dict({
      'hidden': True,
      'label': 'Sinaida Siering-Christoph',
      'value': 'N133_Gewerbezone_mit_Wohnen_Mischzone_4_G_und_groesser',
    }),
    'nutzungsplanung-weitere-festlegungen': dict({
      'hidden': False,
      'label': 'Rainer Ullmann',
      'value': 'Erschliessungsplan (Linie): Baulinie Strasse, Erschliessungsplan (Linie): Strassenbaulinie für 1-geschossige Bauten, Erschliessungsplan (Linie): Gestaltungsbaulinie, Erschliessungsplan (Linie): min. Abstand gem. § 46 kant. Bauverordnung entlang Gemeindestrasse (5.0m), Fläche: Archäologische Fundstellen',
    }),
    'ort': dict({
      'hidden': False,
      'label': 'Herr Hans-Rainer Wulff',
      'value': 'Solothurn',
    }),
    'parzellen': dict({
      'form': 'those-charge-why',
      'hidden': False,
      'label': 'Elwira Paffrath',
      'value': list([
        dict({
          'amtschreiberei': dict({
            'hidden': False,
            'label': None,
            'value': 'Amtschreiberei Region Solothurn',
          }),
          'e-grid': dict({
            'hidden': False,
            'label': 'Marc Caspar MBA.',
            'value': 'CH127079320611',
          }),
          'flaeche-m': dict({
            'hidden': False,
            'label': 'Ing. Helen Jungfer',
            'value': 1465,
          }),
          'grundbuchkreis': dict({
            'hidden': False,
            'label': None,
            'value': 'Solothurn',
          }),
          'grundstueckart': dict({
            'hidden': False,
            'label': None,
            'value': 'Liegenschaft',
          }),
          'lagekoordinaten-nord': dict({
            'hidden': True,
            'label': 'Traugott Kaul',
            'value': 1228110.0,
          }),
          'lagekoordinaten-ost': dict({
            'hidden': True,
            'label': 'Ilona Henck B.Eng.',
            'value': 2607345.0,
          }),
          'parzellennummer': dict({
            'hidden': False,
            'label': 'Univ.Prof. Randolf Oderwald B.A.',
            'value': '1939',
          }),
        }),
      ]),
    }),
    'plz': dict({
      'hidden': False,
      'label': 'Muzaffer Renner',
      'value': '4500',
    }),
    'strasse-flurname': dict({
      'hidden': False,
      'label': 'Ing. Monique Hoffmann MBA.',
      'value': 'Krummturmstrasse',
    }),
    'strasse-nummer': dict({
      'hidden': False,
      'label': 'Apostolos Klapp',
      'value': '3',
    }),
  })
# ---
# name: test_sogis_client[scenario_02]
  dict({
    'weitere-gis-informationen': dict({
      'hidden': False,
      'label': 'Kay-Uwe Wagner',
      'value': 'Bodenbedeckung: geschlossener_Wald, Bodenbedeckung: fliessendes Gewaesser',
    }),
  })
# ---
# name: test_sogis_client[scenario_03]
  dict({
    'fruchtfolgeflaeche': dict({
      'hidden': False,
      'label': 'Herr Michail Säuberlich B.Eng.',
      'value': 'Fruchtfolgeflächen-Qualität: geeignet',
    }),
  })
# ---
# name: test_sogis_client[scenario_04]
  dict({
    'naturgefahren-gis': dict({
      'hidden': False,
      'label': 'Ayten Sölzer',
      'value': 'Gefahrenstufe: mittel, Charakterisierung: U6',
    }),
  })
# ---
# name: test_sogis_client[scenario_05]
  dict({
  })
# ---
# name: test_sogis_client[scenario_06]
  dict({
    'gewaesserschutz': dict({
      'hidden': False,
      'label': 'Erhard Oestrovsky',
      'value': 'Schutzzone: S1',
    }),
  })
# ---
# name: test_sogis_client[scenario_07]
  dict({
    'denkmalschutz': dict({
      'hidden': False,
      'label': 'Janos Pohl',
      'value': 'Denkmalschutzobjekt: Buristurm, Denkmalschutz Schutzstufe: geschützt',
    }),
  })
# ---
# name: test_sogis_client[scenario_08]
  dict({
    'archaeologie': dict({
      'hidden': False,
      'label': 'Patrik Müller MBA.',
      'value': 'Röm. Münze und versch. Einzelfunde, Neuzeitliche Schanze',
    }),
  })
# ---
# name: test_sogis_client[scenario_09]
  dict({
    'bundesinventare': dict({
      'hidden': False,
      'label': 'Matthias Hauffer',
      'value': 'IVS Regional und Lokal: Lohn/Rütifeld - Lüsslingen, Nr. des IVS Regional und Lokal: SO 563',
    }),
  })
# ---
# name: test_sogis_client[scenario_10]
  dict({
    'bundesinventare': dict({
      'hidden': False,
      'label': 'Matthias Hauffer',
      'value': 'IVS National: Buechrain - Lohn, Nr. des IVS National: SO 6.1.2',
    }),
  })
# ---
# name: test_sogis_client[scenario_11]
  dict({
    'bundesinventare': dict({
      'hidden': False,
      'label': 'Matthias Hauffer',
      'value': 'BLN: Weissenstein, Nr. des BLN: 1010',
    }),
  })
# ---
# name: test_sogis_client[scenario_12]
  dict({
    'bundesinventare': dict({
      'hidden': False,
      'label': 'Matthias Hauffer',
      'value': 'Trockenwiesen und -weiden (TWW): Bützen',
    }),
  })
# ---
# name: test_sogis_client[scenario_13]
  dict({
    'bundesinventare': dict({
      'hidden': False,
      'label': 'Matthias Hauffer',
      'value': 'Hochmoore: Chlepfimoos/Burgmoos, BLN: Steineberg – Steinhof – Burgäschisee, Nr. des BLN: 1313',
    }),
  })
# ---
# name: test_sogis_client[scenario_14]
  dict({
    'bundesinventare': dict({
      'hidden': False,
      'label': 'Matthias Hauffer',
      'value': 'Amphibien Ortsfeste Objekte: Grenchner Witi, Wasser- und Zugvogelreservate: Witi (BE,SO)',
    }),
  })
# ---
# name: test_sogis_client[scenario_15]
  dict({
    'bundesinventare': dict({
      'hidden': False,
      'label': 'Matthias Hauffer',
      'value': 'Auengebiete: Aare bei Altreu',
    }),
  })
# ---
# name: test_sogis_client_errors[so_unknown_layer_data_source-200]
  dict({
    'data': dict({
    }),
    'errors': list([
      dict({
        'client': 'camac.gis.clients.sogis.SoGisClient',
        'data_source_description': '''
          Figure opportunity service number inside. Fire try cell open else look. Table same method work.
          Statement bag someone them style truth deep. These health team change shake meeting.
        ''',
        'data_source_id': '49992886-4602-4eb3-8499-ebeb58c9f17d',
        'detail': 'Fehler 404 beim Abrufen der Daten von der geo.so.ch Schnittstelle',
      }),
    ]),
  })
# ---
# name: test_sogis_client_errors[so_unknown_property_data_source-200]
  dict({
    'data': dict({
      'gemeinde': dict({
        'displayValue': None,
        'hidden': False,
        'label': 'Suse Junk',
        'value': None,
      }),
    }),
  })
# ---
# name: test_sogis_client_errors[so_unknown_question_data_source-200]
  dict({
    'data': dict({
    }),
    'errors': list([
      dict({
        'client': 'camac.gis.clients.sogis.SoGisClient',
        'data_source_description': '''
          Figure opportunity service number inside. Fire try cell open else look. Table same method work.
          Statement bag someone them style truth deep. These health team change shake meeting.
        ''',
        'data_source_id': '49992886-4602-4eb3-8499-ebeb58c9f17d',
        'detail': 'Unknown question unknown_question in gis config',
      }),
    ]),
  })
# ---
